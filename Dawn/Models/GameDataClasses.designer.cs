#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dusk.Dawn.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DawnDB")]
	public partial class GameDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLoot(Loot instance);
    partial void UpdateLoot(Loot instance);
    partial void DeleteLoot(Loot instance);
    partial void InsertRaidTierData(RaidTierData instance);
    partial void UpdateRaidTierData(RaidTierData instance);
    partial void DeleteRaidTierData(RaidTierData instance);
    partial void InsertSpell(Spell instance);
    partial void UpdateSpell(Spell instance);
    partial void DeleteSpell(Spell instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertRaid(Raid instance);
    partial void UpdateRaid(Raid instance);
    partial void DeleteRaid(Raid instance);
    #endregion
		
		public GameDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DawnConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GameDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Loot> Loots
		{
			get
			{
				return this.GetTable<Loot>();
			}
		}
		
		public System.Data.Linq.Table<LootEntry> LootEntries
		{
			get
			{
				return this.GetTable<LootEntry>();
			}
		}
		
		public System.Data.Linq.Table<RaidTierData> RaidTierDatas
		{
			get
			{
				return this.GetTable<RaidTierData>();
			}
		}
		
		public System.Data.Linq.Table<RaidTierDataLoot> RaidTierDataLoots
		{
			get
			{
				return this.GetTable<RaidTierDataLoot>();
			}
		}
		
		public System.Data.Linq.Table<Spell> Spells
		{
			get
			{
				return this.GetTable<Spell>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<Unit_Spell> Unit_Spells
		{
			get
			{
				return this.GetTable<Unit_Spell>();
			}
		}
		
		public System.Data.Linq.Table<ItemSpell> ItemSpells
		{
			get
			{
				return this.GetTable<ItemSpell>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<Raid> Raids
		{
			get
			{
				return this.GetTable<Raid>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loot")]
	public partial class Loot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public Loot()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loot_Entry")]
	public partial class LootEntry
	{
		
		private int _LootId;
		
		private int _ItemId;
		
		private bool _AllowMultiple;
		
		private System.Nullable<double> _Chance;
		
		public LootEntry()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LootId", DbType="Int NOT NULL")]
		public int LootId
		{
			get
			{
				return this._LootId;
			}
			set
			{
				if ((this._LootId != value))
				{
					this._LootId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowMultiple", DbType="Bit NOT NULL")]
		public bool AllowMultiple
		{
			get
			{
				return this._AllowMultiple;
			}
			set
			{
				if ((this._AllowMultiple != value))
				{
					this._AllowMultiple = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chance", DbType="Float")]
		public System.Nullable<double> Chance
		{
			get
			{
				return this._Chance;
			}
			set
			{
				if ((this._Chance != value))
				{
					this._Chance = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Raid_TierData")]
	public partial class RaidTierData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RaidId;
		
		private int _TierId;
		
		private System.Nullable<int> _LootId;
		
		private System.Nullable<long> _Health;
		
		private int _Attack;
		
		private int _Gold;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRaidIdChanging(int value);
    partial void OnRaidIdChanged();
    partial void OnTierIdChanging(int value);
    partial void OnTierIdChanged();
    partial void OnLootIdChanging(System.Nullable<int> value);
    partial void OnLootIdChanged();
    partial void OnHealthChanging(System.Nullable<long> value);
    partial void OnHealthChanged();
    partial void OnAttackChanging(int value);
    partial void OnAttackChanged();
    partial void OnGoldChanging(int value);
    partial void OnGoldChanged();
    #endregion
		
		public RaidTierData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RaidId", DbType="Int NOT NULL")]
		public int RaidId
		{
			get
			{
				return this._RaidId;
			}
			set
			{
				if ((this._RaidId != value))
				{
					this.OnRaidIdChanging(value);
					this.SendPropertyChanging();
					this._RaidId = value;
					this.SendPropertyChanged("RaidId");
					this.OnRaidIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TierId", DbType="Int NOT NULL")]
		public int TierId
		{
			get
			{
				return this._TierId;
			}
			set
			{
				if ((this._TierId != value))
				{
					this.OnTierIdChanging(value);
					this.SendPropertyChanging();
					this._TierId = value;
					this.SendPropertyChanged("TierId");
					this.OnTierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LootId", DbType="Int")]
		public System.Nullable<int> LootId
		{
			get
			{
				return this._LootId;
			}
			set
			{
				if ((this._LootId != value))
				{
					this.OnLootIdChanging(value);
					this.SendPropertyChanging();
					this._LootId = value;
					this.SendPropertyChanged("LootId");
					this.OnLootIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Health", DbType="BigInt")]
		public System.Nullable<long> Health
		{
			get
			{
				return this._Health;
			}
			set
			{
				if ((this._Health != value))
				{
					this.OnHealthChanging(value);
					this.SendPropertyChanging();
					this._Health = value;
					this.SendPropertyChanged("Health");
					this.OnHealthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attack", DbType="Int NOT NULL")]
		public int Attack
		{
			get
			{
				return this._Attack;
			}
			set
			{
				if ((this._Attack != value))
				{
					this.OnAttackChanging(value);
					this.SendPropertyChanging();
					this._Attack = value;
					this.SendPropertyChanged("Attack");
					this.OnAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gold", DbType="Int NOT NULL")]
		public int Gold
		{
			get
			{
				return this._Gold;
			}
			set
			{
				if ((this._Gold != value))
				{
					this.OnGoldChanging(value);
					this.SendPropertyChanging();
					this._Gold = value;
					this.SendPropertyChanged("Gold");
					this.OnGoldChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Raid_TierData_Loot")]
	public partial class RaidTierDataLoot
	{
		
		private int _TierDataId;
		
		private long _Damage;
		
		private int _LootId;
		
		public RaidTierDataLoot()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TierDataId", DbType="Int NOT NULL")]
		public int TierDataId
		{
			get
			{
				return this._TierDataId;
			}
			set
			{
				if ((this._TierDataId != value))
				{
					this._TierDataId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Damage", DbType="BigInt NOT NULL")]
		public long Damage
		{
			get
			{
				return this._Damage;
			}
			set
			{
				if ((this._Damage != value))
				{
					this._Damage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LootId", DbType="Int NOT NULL")]
		public int LootId
		{
			get
			{
				return this._LootId;
			}
			set
			{
				if ((this._LootId != value))
				{
					this._LootId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spell")]
	public partial class Spell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Text;
		
		private string _Method;
		
		private string _Parameter;
		
		private System.Nullable<int> _ImageId;
		
		private int _RarityId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    partial void OnParameterChanging(string value);
    partial void OnParameterChanged();
    partial void OnImageIdChanging(System.Nullable<int> value);
    partial void OnImageIdChanged();
    partial void OnRarityIdChanging(int value);
    partial void OnRarityIdChanged();
    #endregion
		
		public Spell()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(1000)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameter", DbType="VarChar(1000)")]
		public string Parameter
		{
			get
			{
				return this._Parameter;
			}
			set
			{
				if ((this._Parameter != value))
				{
					this.OnParameterChanging(value);
					this.SendPropertyChanging();
					this._Parameter = value;
					this.SendPropertyChanged("Parameter");
					this.OnParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int")]
		public System.Nullable<int> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RarityId", DbType="Int NOT NULL")]
		public int RarityId
		{
			get
			{
				return this._RarityId;
			}
			set
			{
				if ((this._RarityId != value))
				{
					this.OnRarityIdChanging(value);
					this.SendPropertyChanging();
					this._RarityId = value;
					this.SendPropertyChanged("RarityId");
					this.OnRarityIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _ImageId;
		
		private int _RarityId;
		
		private int _TypeId;
		
		private System.Nullable<int> _RaceId;
		
		private System.Nullable<int> _RoleId;
		
		private System.Nullable<int> _AttributeId;
		
		private int _Attack;
		
		private int _Defense;
		
		private int _Perception;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageIdChanging(System.Nullable<int> value);
    partial void OnImageIdChanged();
    partial void OnRarityIdChanging(int value);
    partial void OnRarityIdChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnRaceIdChanging(System.Nullable<int> value);
    partial void OnRaceIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnAttributeIdChanging(System.Nullable<int> value);
    partial void OnAttributeIdChanged();
    partial void OnAttackChanging(int value);
    partial void OnAttackChanged();
    partial void OnDefenseChanging(int value);
    partial void OnDefenseChanged();
    partial void OnPerceptionChanging(int value);
    partial void OnPerceptionChanged();
    #endregion
		
		public Unit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int")]
		public System.Nullable<int> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RarityId", DbType="Int NOT NULL")]
		public int RarityId
		{
			get
			{
				return this._RarityId;
			}
			set
			{
				if ((this._RarityId != value))
				{
					this.OnRarityIdChanging(value);
					this.SendPropertyChanging();
					this._RarityId = value;
					this.SendPropertyChanged("RarityId");
					this.OnRarityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RaceId", DbType="Int")]
		public System.Nullable<int> RaceId
		{
			get
			{
				return this._RaceId;
			}
			set
			{
				if ((this._RaceId != value))
				{
					this.OnRaceIdChanging(value);
					this.SendPropertyChanging();
					this._RaceId = value;
					this.SendPropertyChanged("RaceId");
					this.OnRaceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeId", DbType="Int")]
		public System.Nullable<int> AttributeId
		{
			get
			{
				return this._AttributeId;
			}
			set
			{
				if ((this._AttributeId != value))
				{
					this.OnAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._AttributeId = value;
					this.SendPropertyChanged("AttributeId");
					this.OnAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attack", DbType="Int NOT NULL")]
		public int Attack
		{
			get
			{
				return this._Attack;
			}
			set
			{
				if ((this._Attack != value))
				{
					this.OnAttackChanging(value);
					this.SendPropertyChanging();
					this._Attack = value;
					this.SendPropertyChanged("Attack");
					this.OnAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defense", DbType="Int NOT NULL")]
		public int Defense
		{
			get
			{
				return this._Defense;
			}
			set
			{
				if ((this._Defense != value))
				{
					this.OnDefenseChanging(value);
					this.SendPropertyChanging();
					this._Defense = value;
					this.SendPropertyChanged("Defense");
					this.OnDefenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Perception", DbType="Int NOT NULL")]
		public int Perception
		{
			get
			{
				return this._Perception;
			}
			set
			{
				if ((this._Perception != value))
				{
					this.OnPerceptionChanging(value);
					this.SendPropertyChanging();
					this._Perception = value;
					this.SendPropertyChanged("Perception");
					this.OnPerceptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit_Spell")]
	public partial class Unit_Spell
	{
		
		private int _UnitId;
		
		private int _SpellId;
		
		private string _Parameter;
		
		private string _DisplayText;
		
		private string _TriggerText;
		
		public Unit_Spell()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellId", DbType="Int NOT NULL")]
		public int SpellId
		{
			get
			{
				return this._SpellId;
			}
			set
			{
				if ((this._SpellId != value))
				{
					this._SpellId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameter", DbType="VarChar(1000)")]
		public string Parameter
		{
			get
			{
				return this._Parameter;
			}
			set
			{
				if ((this._Parameter != value))
				{
					this._Parameter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="VarChar(1000)")]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this._DisplayText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerText", DbType="VarChar(1000)")]
		public string TriggerText
		{
			get
			{
				return this._TriggerText;
			}
			set
			{
				if ((this._TriggerText != value))
				{
					this._TriggerText = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item_Spell")]
	public partial class ItemSpell
	{
		
		private int _ItemId;
		
		private int _SpellId;
		
		private string _Parameter;
		
		private string _DisplayText;
		
		private string _TriggerText;
		
		public ItemSpell()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellId", DbType="Int NOT NULL")]
		public int SpellId
		{
			get
			{
				return this._SpellId;
			}
			set
			{
				if ((this._SpellId != value))
				{
					this._SpellId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameter", DbType="VarChar(1000)")]
		public string Parameter
		{
			get
			{
				return this._Parameter;
			}
			set
			{
				if ((this._Parameter != value))
				{
					this._Parameter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="VarChar(1000)")]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this._DisplayText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerText", DbType="VarChar(1000)")]
		public string TriggerText
		{
			get
			{
				return this._TriggerText;
			}
			set
			{
				if ((this._TriggerText != value))
				{
					this._TriggerText = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _TypeId;
		
		private string _Description;
		
		private System.Nullable<int> _ImageId;
		
		private int _RarityId;
		
		private int _Attack;
		
		private int _Defense;
		
		private int _Perception;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageIdChanging(System.Nullable<int> value);
    partial void OnImageIdChanged();
    partial void OnRarityIdChanging(int value);
    partial void OnRarityIdChanged();
    partial void OnAttackChanging(int value);
    partial void OnAttackChanged();
    partial void OnDefenseChanging(int value);
    partial void OnDefenseChanged();
    partial void OnPerceptionChanging(int value);
    partial void OnPerceptionChanged();
    #endregion
		
		public Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int")]
		public System.Nullable<int> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RarityId", DbType="Int NOT NULL")]
		public int RarityId
		{
			get
			{
				return this._RarityId;
			}
			set
			{
				if ((this._RarityId != value))
				{
					this.OnRarityIdChanging(value);
					this.SendPropertyChanging();
					this._RarityId = value;
					this.SendPropertyChanged("RarityId");
					this.OnRarityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attack", DbType="Int NOT NULL")]
		public int Attack
		{
			get
			{
				return this._Attack;
			}
			set
			{
				if ((this._Attack != value))
				{
					this.OnAttackChanging(value);
					this.SendPropertyChanging();
					this._Attack = value;
					this.SendPropertyChanged("Attack");
					this.OnAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defense", DbType="Int NOT NULL")]
		public int Defense
		{
			get
			{
				return this._Defense;
			}
			set
			{
				if ((this._Defense != value))
				{
					this.OnDefenseChanging(value);
					this.SendPropertyChanging();
					this._Defense = value;
					this.SendPropertyChanged("Defense");
					this.OnDefenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Perception", DbType="Int NOT NULL")]
		public int Perception
		{
			get
			{
				return this._Perception;
			}
			set
			{
				if ((this._Perception != value))
				{
					this.OnPerceptionChanging(value);
					this.SendPropertyChanging();
					this._Perception = value;
					this.SendPropertyChanged("Perception");
					this.OnPerceptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Raid")]
	public partial class Raid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _ImageId;
		
		private int _SpellSlots;
		
		private System.Nullable<System.TimeSpan> _Duration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageIdChanging(System.Nullable<int> value);
    partial void OnImageIdChanged();
    partial void OnSpellSlotsChanging(int value);
    partial void OnSpellSlotsChanged();
    partial void OnDurationChanging(System.Nullable<System.TimeSpan> value);
    partial void OnDurationChanged();
    #endregion
		
		public Raid()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="Int")]
		public System.Nullable<int> ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellSlots", DbType="Int NOT NULL")]
		public int SpellSlots
		{
			get
			{
				return this._SpellSlots;
			}
			set
			{
				if ((this._SpellSlots != value))
				{
					this.OnSpellSlotsChanging(value);
					this.SendPropertyChanging();
					this._SpellSlots = value;
					this.SendPropertyChanged("SpellSlots");
					this.OnSpellSlotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Time")]
		public System.Nullable<System.TimeSpan> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
